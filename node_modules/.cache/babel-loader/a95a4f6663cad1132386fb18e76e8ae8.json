{"remainingRequest":"/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/node_modules/babel-loader/lib/index.js!/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/node_modules/eslint-loader/index.js??ref--13-0!/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/src/store/index.js","dependencies":[{"path":"/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/src/store/index.js","mtime":1619705339998},{"path":"/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/node_modules/cache-loader/dist/cjs.js","mtime":1616517656185},{"path":"/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/node_modules/babel-loader/lib/index.js","mtime":1616517656185},{"path":"/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/node_modules/eslint-loader/index.js","mtime":1616517658235}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudmFsdWVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVN0b3JlKHsKICBzdGF0ZTogewogICAgcGVvcGxlOiBbXSwKICAgIHNlYXJjaFN0cmluZzogJycKICB9LAogIGdldHRlcnM6IHsKICAgIGZpbHRlcmVkRGF0YTogZnVuY3Rpb24gZmlsdGVyZWREYXRhKHN0YXRlKSB7CiAgICAgIC8vY29uc29sZS5sb2coKQogICAgICByZXR1cm4gc3RhdGUucGVvcGxlLmZpbHRlcihmdW5jdGlvbiAocGVyc29uKSB7CiAgICAgICAgcmV0dXJuIE9iamVjdC52YWx1ZXMocGVyc29uKS5maXJzdG5hbWUuaW5jbHVkZXMoc3RhdGUuc2VhcmNoU3RyaW5nKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldFBlb3BsZTogZnVuY3Rpb24gc2V0UGVvcGxlKHN0YXRlLCB2YWx1ZSkgewogICAgICBzdGF0ZS5wZW9wbGUgPSB2YWx1ZTsKICAgIH0sCiAgICBzZXRTZWFyY2hTdHJpbmc6IGZ1bmN0aW9uIHNldFNlYXJjaFN0cmluZyhzdGF0ZSwgdmFsdWUpIHsKICAgICAgc3RhdGUuc2VhcmNoU3RyaW5nID0gdmFsdWU7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICByZXRyaWV2ZVBlb3BsZTogZnVuY3Rpb24gcmV0cmlldmVQZW9wbGUoc3RvcmUpIHsKICAgICAgZmV0Y2goJ2h0dHBzOi8vcnVuLm1vY2t5LmlvL3YzLzcwZTViMGFkLTcxMTItNDFjNS04NTNlLWIzODJhMzllNjViNycpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHJldHVybiByZXMuanNvbigpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChqc29uKSB7CiAgICAgICAgcmV0dXJuIHN0b3JlLmNvbW1pdCgnc2V0UGVvcGxlJywganNvbi5wZW9wbGUpOwogICAgICB9KTsKICAgIH0sCiAgICBzZWFyY2hTdHJpbmdVcGRhdGVkOiBmdW5jdGlvbiBzZWFyY2hTdHJpbmdVcGRhdGVkKHN0b3JlLCB2YWx1ZSkgewogICAgICBzdG9yZS5jb21taXQoJ3NldFNlYXJjaFN0cmluZycsIHZhbHVlKTsKICAgIH0KICB9LAogIG1vZHVsZXM6IHt9Cn0pOw=="},{"version":3,"sources":["/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/src/store/index.js"],"names":["createStore","state","people","searchString","getters","filteredData","filter","person","Object","values","firstname","includes","mutations","setPeople","value","setSearchString","actions","retrievePeople","store","fetch","then","res","json","commit","searchStringUpdated","modules"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;AACzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,YAAY,EAAE;AAFT,GADkB;AAKzBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,wBACMJ,KADN,EACY;AACjB;AACA,aAAOA,KAAK,CAACC,MAAN,CACNI,MADM,CACC,UAACC,MAAD;AAAA,eACNC,MAAM,CAACC,MAAP,CAAcF,MAAd,EAAsBG,SAAtB,CAAgCC,QAAhC,CAAyCV,KAAK,CAACE,YAA/C,CADM;AAAA,OADD,CAAP;AAGD;AANM,GALgB;AAazBS,EAAAA,SAAS,EAAE;AACTC,IAAAA,SADS,qBACCZ,KADD,EACQa,KADR,EACc;AACrBb,MAAAA,KAAK,CAACC,MAAN,GAAeY,KAAf;AACD,KAHQ;AAITC,IAAAA,eAJS,2BAIOd,KAJP,EAIca,KAJd,EAIoB;AAC3Bb,MAAAA,KAAK,CAACE,YAAN,GAAqBW,KAArB;AACD;AANQ,GAbc;AAqBzBE,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,0BACQC,KADR,EACc;AACnBC,MAAAA,KAAK,CAAC,8DAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAE,IAAI;AAAA,eAAEJ,KAAK,CAACK,MAAN,CAAa,WAAb,EAA0BD,IAAI,CAACpB,MAA/B,CAAF;AAAA,OAFZ;AAGD,KALM;AAMPsB,IAAAA,mBANO,+BAMaN,KANb,EAMoBJ,KANpB,EAM0B;AAC/BI,MAAAA,KAAK,CAACK,MAAN,CAAa,iBAAb,EAAgCT,KAAhC;AACD;AARM,GArBgB;AA+BzBW,EAAAA,OAAO,EAAE;AA/BgB,CAAD,CAA1B","sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    people: [],\n    searchString: '',\n  },\n  getters: {\n    filteredData(state){\n      //console.log()\n      return state.people\n      .filter((person)=>\n        Object.values(person).firstname.includes(state.searchString))\n    }\n  },\n  mutations: {\n    setPeople(state, value){\n      state.people = value;\n    },\n    setSearchString(state, value){\n      state.searchString = value;\n    }\n  },\n  actions: {\n    retrievePeople(store){\n      fetch('https://run.mocky.io/v3/70e5b0ad-7112-41c5-853e-b382a39e65b7')\n        .then(res=>res.json())\n        .then(json=>store.commit('setPeople', json.people))\n    },\n    searchStringUpdated(store, value){\n      store.commit('setSearchString', value)\n    }\n  },\n  modules: {\n  }\n})\n"]}]}