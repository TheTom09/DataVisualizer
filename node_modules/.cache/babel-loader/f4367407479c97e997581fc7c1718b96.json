{"remainingRequest":"/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/node_modules/babel-loader/lib/index.js!/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/src/components/Datatable.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/src/components/Datatable.vue","mtime":1619988955012},{"path":"/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICcuL1BhZ2luYXRpb24udnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEYXRhdGFibGUnLAogIGNvbXBvbmVudHM6IHsKICAgIFBhZ2luYXRpb246IFBhZ2luYXRpb24KICB9LAogIHByb3BzOiB7CiAgICBkYXRhOiBBcnJheQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhZ2VTaXplOiAxMCwKICAgICAgcGFnZU9mZnNldDogMAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICB0b3RhbEl0ZW1zOiBmdW5jdGlvbiB0b3RhbEl0ZW1zKCkgewogICAgICByZXR1cm4gdGhpcy5kYXRhLmxlbmd0aDsKICAgIH0sCiAgICBwYWdpbmF0ZWREYXRhOiBmdW5jdGlvbiBwYWdpbmF0ZWREYXRhKCkgewogICAgICByZXR1cm4gdGhpcy5kYXRhLnNsaWNlKHRoaXMucGFnZU9mZnNldCwgdGhpcy5wYWdlT2Zmc2V0ICsgcGFyc2VJbnQodGhpcy5wYWdlU2l6ZSkpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/thomasleydet/Documents/Cours/Dev Front/TpDataVisualizer/src/components/Datatable.vue"],"names":[],"mappings":";AA+CA,OAAO,UAAP,MAAuB,kBAAvB;AACA,eAAe;AACb,EAAA,IAAI,EAAE,WADO;AAEb,EAAA,UAAU,EAAE;AAAE,IAAA,UAAS,EAAT;AAAF,GAFC;AAGb,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EAAE;AADD,GAHM;AAMb,EAAA,IANa,kBAMP;AACJ,WAAO;AACL,MAAA,QAAQ,EAAE,EADL;AAEL,MAAA,UAAU,EAAE;AAFP,KAAP;AAID,GAXY;AAYb,EAAA,QAAQ,EAAC;AACP,IAAA,UADO,wBACK;AACV,aAAO,KAAK,IAAL,CAAU,MAAjB;AACD,KAHM;AAIP,IAAA,aAJO,2BAIQ;AACb,aAAO,KAAK,IAAL,CAAU,KAAV,CAAgB,KAAK,UAArB,EAAiC,KAAK,UAAL,GAAgB,QAAQ,CAAC,KAAK,QAAN,CAAzD,CAAP;AACF;AANO;AAZI,CAAf","sourcesContent":["<template>\n  <div class=\"datatable\">\n    voila mon composant tableau\n\n    <table>\n\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Gender</th>\n          <th>Email</th>\n          <th>Address</th>\n          <th>Fav Fruit</th>\n          <th>Fav Pet</th>\n          <th>Fav Color</th>\n        </tr>\n      </thead>\n      <tbody>\n       <tr v-for=\"row in paginatedData\" :key=\"row.id\">\n          <td>{{row.firstname + ' ' + row.lastname}}</td>\n          <td>{{row.gender}}</td>\n          <td>{{row.contact.email}}</td>\n          <td>{{row.contact.address}}</td>\n          <td>{{row.preferences.favorite_fruit}}</td>\n          <td>{{row.preferences.favorite_pet}}</td>\n          <td>{{row.preferences.favorite_color}}</td>\n        </tr> \n      </tbody>\n\n    </table>\n\n    <Pagination :limit=\"pageSize\" :offset=\"pageOffset\" :total=\"data.length\" @pageChanged=\"pageOffset = $event\"/>\n\n    <select v-model=\"pageSize\">\n      <option value=\"10\">10</option>\n      <option value=\"25\">25</option>\n      <option value=\"50\">50</option>\n      <option value=\"100\">100</option>\n    </select>\n\n    Showing rows from {{pageOffset+1}} to {{pageOffset+parseInt(pageSize)}} on {{totalItems}}\n\n  </div>\n</template>\n\n<script>\n\nimport Pagination from './Pagination.vue'\nexport default {\n  name: 'Datatable',\n  components: { Pagination },\n  props: {\n    data: Array\n  },\n  data(){\n    return {\n      pageSize: 10,\n      pageOffset: 0,\n    }\n  },\n  computed:{\n    totalItems(){\n      return this.data.length;\n    },\n    paginatedData(){\n      return this.data.slice(this.pageOffset, this.pageOffset+parseInt(this.pageSize))\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"],"sourceRoot":""}]}